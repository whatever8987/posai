version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: nail-salon-postgres
    environment:
      POSTGRES_DB: nail_salon_db
      POSTGRES_USER: nail_salon_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nail_salon_user -d nail_salon_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nail-salon-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: nail-salon-ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_ORIGINS=*
    networks:
      - nail-salon-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nail-salon-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_started
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://nail_salon_user:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/nail_salon_db
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # Security
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # Ollama
      OLLAMA_BASE_URL: http://ollama:11434
      OLLAMA_MODEL: llama2
      
      # App Settings
      DEBUG: ${DEBUG:-false}
      BACKEND_CORS_ORIGINS: http://localhost:5173,http://localhost:80,http://frontend:80
      
      # Sentry (optional)
      SENTRY_DSN: ${SENTRY_DSN:-}
    volumes:
      - tenant_data:/app/tenant_data
      - backend_logs:/app/logs
      - training_data:/app/training
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Celery Worker
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nail-salon-celery-worker
    command: celery -A app.services.sync_service worker --loglevel=info
    depends_on:
      - backend
      - redis
    environment:
      DATABASE_URL: postgresql+asyncpg://nail_salon_user:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/nail_salon_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      OLLAMA_BASE_URL: http://ollama:11434
    volumes:
      - tenant_data:/app/tenant_data
      - backend_logs:/app/logs
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nail-salon-celery-beat
    command: celery -A app.services.sync_service beat --loglevel=info
    depends_on:
      - backend
      - redis
    environment:
      DATABASE_URL: postgresql+asyncpg://nail_salon_user:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/nail_salon_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
    volumes:
      - backend_logs:/app/logs
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nail-salon-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: nail-salon-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - nail-salon-network
    restart: unless-stopped

  # Grafana (Dashboards)
  grafana:
    image: grafana/grafana:latest
    container_name: nail-salon-grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - nail-salon-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local
  tenant_data:
    driver: local
  backend_logs:
    driver: local
  training_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  nail-salon-network:
    driver: bridge

